{"version":3,"sources":["Constants/actions.js","Reducers/index.js","configureStore.js","Actions/index.js","Screens/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["START_APP","initialState","onStart","Date","onUpdate","rootReducer","combineReducers","startApp","state","arguments","length","undefined","action","type","Object","assign","loggerMiddleware","createLogger","initApp","currentState","dispatch","objectSpread","links","url","text","Home","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","document","title","actions","getTime","react_default","a","createElement","Container","style","styles","container","Grid","textAlign","columns","header","Row","Column","mobile","tablet","computer","grid","Header","as","Menu","compact","map","_ref","key","Item","href","target","p","Message","info","Component","defaultProps","PropTypes","object","marginLeft","marginRight","marginTop","marginBottom","fontSize","lineHeight","textDecoration","color","connect","bindActionCreators","App","react_router_dom","react_router","path","component","Boolean","window","location","hostname","match","preloadedState","rootElement","getElementById","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3795d7d.chunk.js","sourcesContent":["export const START_APP = 'INITIALIZING_APP';","import { combineReducers } from 'redux';\n\nimport { START_APP } from \"../Constants/actions\";\n\nconst initialState = {\n    onStart: new Date(),\n    onUpdate: new Date()\n};\n\nfunction startApp(state = initialState, action) {\n    switch (action.type) {\n        case START_APP:\n            return Object.assign({}, initialState, {\n                onUpdate: action.onUpdate\n            });\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    startApp\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from './Reducers'\n\nconst loggerMiddleware = createLogger();\n\nexport default function configureStore(preloadedState) {\n    return createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunkMiddleware, loggerMiddleware)\n    )\n}","import { START_APP } from '../Constants/actions';\n\nexport function initApp(currentState){\n    return (dispatch) => {\n        dispatch({\n            ...currentState,\n            type: START_APP,\n            onUpdate: new Date()\n        });\n    }\n}","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Container, Grid, Header, Menu, Message } from 'semantic-ui-react';\nimport { initApp } from \"../../Actions\";\n\nconst links = [\n    {\n        url: \"https://github.com/vaibsharma\",\n        text: \"Github\"\n    },\n    {\n        url: \"https://linkedin.com/in/vaibsharma\",\n        text: \"Linkedin\"\n    },\n    {\n        url: \"https://www.spoj.com/users/techobist/\",\n        text: \"SPOJ\"\n    },\n    {\n        url: \"https://www.facebook.com/techobist/\",\n        text: \"Facebook\"\n    }\n];\n\nclass Home extends Component {\n    constructor(props){\n        super(props);\n        console.log('start App', this.props);\n    }\n\n    static defaultProps = {\n        startApp: PropTypes.object,\n        actions: PropTypes.object\n    };\n\n    componentDidMount() {\n        document.title = \"Home - Vaibhav Sharma\";\n        this.props.actions.initApp();\n    }\n\n    render() {\n        console.log(this.props.startApp.onUpdate.getTime(),this.props.startApp.onStart.getTime());\n        return (\n            <Container style={styles.container}>\n                <div>\n                    <Grid textAlign={\"center\"} columns={2} style={styles.header}>\n                        <Grid.Row>\n                            <Grid.Column mobile={16} tablet={8} computer={8} style={styles.grid}>\n                                <Header as='h1'>Vaibhav Sharma</Header>\n                            </Grid.Column>\n                            <Grid.Column mobile={16} tablet={8} computer={8} style={styles.grid}>\n                                <Menu compact>\n                                    {links.map(({url, text}, key) => (\n                                        <Menu.Item key={key}>\n                                        <a href={url} target={'_blank'}>{text}</a>\n                                        </Menu.Item>\n                                    ))}\n                                </Menu>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                    <p style={styles.p}>\n                        Hi! I am Vaibhav Sharma (vaibsharma). I am a final year Engineering Physics student from <b>Delhi\n                        Technological University</b> who loves Physics as well as enjoy Programming. I work on system\n                        architecture, web and mobile applications. I've been a GSoC student at <b>AOSSIE(Australian Open\n                        Source Software\n                        Innovations and Educations)</b> in 2017 and mentor in 2018. Will be joining <b>Unacademy</b> as a\n                        Software Engineer from June 2019.\n                    </p>\n                    <Message info>\n                        <Message.Header>Am I available for Freelancing?</Message.Header>\n                        <p>Yes, I am available. If you have a project and would like me to work on it, drop me a\n                            <a style={styles.a} href=\"mailto:vaib.sharma44@gmail.com\"><b> mail</b> .</a>\n                        </p>\n                    </Message>\n                </div>\n            </Container>\n        );\n    }\n}\n\nconst styles = {\n    container : {\n        marginLeft: '2em',\n        marginRight: '2em',\n        marginTop: '2em'\n    },\n    header:{\n      marginBottom: '1.5em'\n    },\n    p: {\n        fontSize: '1.3em',\n        lineHeight: '1.4em'\n    },\n    a: {\n        textDecoration: 'none',\n        color: 'inherit'\n    },\n    grid:{\n        marginTop: '1em'\n    }\n};\n\nconst mapStateToProps = state => ({\n    startApp: state.startApp\n});\n\nexport default connect(mapStateToProps, (dispatch) => {\n    return {\n        actions: bindActionCreators({\n            initApp\n        }, dispatch)\n    }\n})(Home);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home  from \"./Screens/Home\"\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path={\"/\"} component={Home} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { Provider } from 'react-redux'\nimport configureStore from './configureStore'\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById('root');\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    rootElement\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}